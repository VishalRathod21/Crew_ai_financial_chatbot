You are an expert CrewAI Developer and Python Backend Engineer.
Your task is to create a complete Python project for the CrowdWisdomTrading AI Agent Internship Assessment.

ðŸ“Œ Project Requirements
Overview

Build a CrewAI-based backend script that generates a daily financial markets summary after US market close (01:30 IST, previous day close).

Technical Stack

Language â†’ Python 3.10+

Framework â†’ CrewAI (latest version)

LLM Provider â†’ litellm (any free model, e.g., OpenAI, Groq, Gemini)

Tools â†’ Tavily API / Serper API for search, Groq API for optional summarization, Telegram Bot API for sending reports

ðŸ“Œ Agents & Flow

You must design CrewAI agents as employees. Each agent has one responsibility only:

Search Agent

Use Tavily/Serper API to fetch US financial news from last 1 hour.

Optionally query Groq API for additional summary.

Pass results forward.

Summary Agent

Create a short summary (< 500 words) of key financial market updates (trading activity, news, events).

Ensure clarity and relevance.

Formatting Agent

Find 2 related charts or images from context (search results).

Insert them into the summary at logical places.

Translating Agent

Translate final summary into Hindi, Arabic, Hebrew.

Maintain formatting (including images).

Send Agent

Send final outputs to a Telegram channel via Telegram Bot API.

Also save PDF version with multi-language summaries + charts locally.

ðŸ“Œ Deliverables

Python Script with CrewAI pipeline (agents + flow).

Config file (.env) for storing API keys (Tavily/Serper, Groq, Telegram, etc.).

PDF Output Example containing:

Summary with images

Translations (Hindi, Arabic, Hebrew)

Logging + Error Handling (must handle API failures gracefully).

README.md with:

Setup instructions

How to run

Required API keys

ðŸ“Œ Extra Points

Add RAG support: fetch both X (Twitter) + YouTube news snippets for more robust reports.

Use structured logging (e.g., Python logging library).

ðŸ“Œ File Structure
crowdwisdom_ai_agent/
â”‚â”€â”€ main.py                 # Entry point for CrewAI flow
â”‚â”€â”€ agents/
â”‚    â”œâ”€â”€ search_agent.py
â”‚    â”œâ”€â”€ summary_agent.py
â”‚    â”œâ”€â”€ formatting_agent.py
â”‚    â”œâ”€â”€ translating_agent.py
â”‚    â”œâ”€â”€ send_agent.py
â”‚â”€â”€ utils/
â”‚    â”œâ”€â”€ pdf_generator.py   # For creating PDFs with charts + text
â”‚    â”œâ”€â”€ logger.py          # Logging setup
â”‚â”€â”€ requirements.txt
â”‚â”€â”€ .env.example            # Example API keys
â”‚â”€â”€ README.md
â”‚â”€â”€ output/
â”‚    â”œâ”€â”€ report_example.pdf

ðŸ“Œ What You Should Generate

Complete Python code with CrewAI agents and flow.

requirements.txt including:

crewai
litellm
python-telegram-bot
requests
reportlab
pillow
tavily-python
serper


README.md with instructions.

Example run command:

python main.py


âš¡ Now generate the full implementation with clean, modular, documented Python code, along with requirements.txt, README.md, and an example PDF output file (multi-language).